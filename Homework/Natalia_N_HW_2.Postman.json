{
	"info": {
		"_postman_id": "21276107-65bb-4c59-8e42-6d73cce56725",
		"name": "HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "01_first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "02_user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var resp_data = pm.response.json();\r",
							"\r",
							"//console.log(\"resp_name = \" + resp_data.name);\r",
							"//console.log(\"resp_age = \" + resp_data.age);\r",
							"//console.log(\"resp_salary_1000 = \" + resp_data.salary);\r",
							"//console.log(\"resp_u_salary_4000 = \" + resp_data.family.u_salary_1_5_year);\r",
							"\r",
							"pm.test(\"Your test name\", function () {\r",
							"    pm.expect(resp_data.name).to.eql(\"Natalia\");\r",
							"});\r",
							"\r",
							"pm.test(\"Your test age\", function () {\r",
							"    pm.expect(resp_data.age).to.eql+(39);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test salary\", function () {\r",
							"    pm.expect(resp_data.salary).to.eql(1000);\r",
							"});\r",
							"\r",
							"var req_data = request.data;\r",
							"\r",
							"pm.test(\"Your test Name=Req\", function () {\r",
							"        pm.expect(resp_data.name).to.eql(req_data.name);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test Age=Req\", function () {\r",
							"        pm.expect(resp_data.age).to.eql(req_data.age);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test Salary=Req\", function () {\r",
							"        pm.expect(resp_data.salary).to.eql(+req_data.salary);\r",
							"});\r",
							"\r",
							"//console.log(resp_data.family);\r",
							"console.log(\"family = \", resp_data.family);\r",
							"\r",
							"pm.test(\"Your test Salary*4\", function () {\r",
							"   pm.expect(resp_data.family.u_salary_1_5_year).to.eql ((req_data.salary)*4);  \r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Natalia",
							"type": "text"
						},
						{
							"key": "age",
							"value": "39",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "03_object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var resp_data = pm.response.json();\r",
							"var query = {};\r",
							"pm.request.url.query.all().forEach((param) => {query[param.key] = param.value});\r",
							"var req_data = pm.request.url.query.toObject();\r",
							"console.log(query.salary)\r",
							"\r",
							"pm.test(\"Your test Name\", function () {    \r",
							"    pm.expect(resp_data.name).to.eql(req_data.name);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test Age\", function () {\r",
							"       pm.expect(resp_data.age).to.eql(req_data.age);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test Salary\", function () {\r",
							"        pm.expect(resp_data.salary).to.eql(+req_data.salary);\r",
							"});\r",
							"\r",
							"var resp_family = resp_data.family;\r",
							"\r",
							"console.log(\"family = \", resp_family);\r",
							"\r",
							"pm.test(\"Your test dog_name\", function () {\r",
							" pm.expect(resp_data.family.pets.dog).to.have.property(\"name\");   \r",
							"});\r",
							"\r",
							"pm.test(\"Your test dogha_age\", function () {\r",
							" pm.expect(resp_data.family.pets.dog).to.have.property(\"age\");   \r",
							"});\r",
							"\r",
							"pm.test(\"Your test dog_Luky\", function () {\r",
							" pm.expect(resp_data.family.pets.dog.name).to.eql(\"Luky\");   \r",
							"});\r",
							"\r",
							"pm.test(\"Your test dog_age\", function () {\r",
							" pm.expect(resp_data.family.pets.dog.name.age).to.eql+(4);   \r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Natalia&age=39&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Natalia"
						},
						{
							"key": "age",
							"value": "39"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "04_object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"var req = pm.request.url.query.toObject();\r",
							"\r",
							"pm.test(\"Your test Name\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(req.name);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test Age\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(39);\r",
							"});\r",
							"\r",
							"console.log(jsonData.salary);\r",
							"console.log(req.salary);\r",
							"console.log(jsonData.salary[0]);\r",
							"console.log(jsonData.salary[1]);\r",
							"console.log(jsonData.salary[2]);\r",
							"\r",
							"pm.test(\"Your test Salary_1000\", function () {\r",
							"   pm.expect(jsonData.salary[0]).to.eql(+req.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test Salary_2000\", function () {\r",
							"   pm.expect(jsonData.salary[1]).to.eql+(req.salary*2);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test Salary_3000\", function () {\r",
							"   pm.expect(jsonData.salary[3]).to.eql+(req.salary*3);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"name\", \"Natalia\");\r",
							"pm.environment.set(\"age\", \"39\");\r",
							"pm.environment.set(\"salary\", 1000);\r",
							"\r",
							"for (var key in jsonData.salary) {\r",
							"    console.log(key+\": \"+ jsonData.salary[key]);\r",
							"};\r",
							"\r",
							"//if ( 3 > 1) {\r",
							"  //  console.log(jsonData.salary)\r",
							"//};\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Natalia&age=39&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Natalia"
						},
						{
							"key": "age",
							"value": "39"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "05_user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var resp_data = pm.response.json();\r",
							"var req_data = request.data; \r",
							"\r",
							"pm.test(\"response have start_qa_salary\", function () {\r",
							"        pm.expect(resp_data).to.have.property(\"start_qa_salary\");\r",
							"});\r",
							"\r",
							"pm.test(\"response have qa_salary_after_6_months\", function () {\r",
							"        pm.expect(resp_data).to.have.property(\"qa_salary_after_6_months\");\r",
							"});\r",
							"\r",
							"pm.test(\"response have qa_salary_after_12_months\", function () {\r",
							"        pm.expect(resp_data).to.have.property(\"qa_salary_after_12_months\");\r",
							"});\r",
							"\r",
							"pm.test(\"response have qa_salary_after_1.5_year\", function () {\r",
							"        pm.expect(resp_data).to.have.property(\"qa_salary_after_1.5_year\");\r",
							"});\r",
							"\r",
							"pm.test(\"response have qa_salary_after_3.5_years\", function () {\r",
							"        pm.expect(resp_data).to.have.property(\"qa_salary_after_3.5_years\");\r",
							"});\r",
							"\r",
							"pm.test(\"response have person\", function () {\r",
							"        pm.expect(resp_data).to.have.property(\"person\");\r",
							"});\r",
							"\r",
							"pm.test(\"start_qa_salary = salary req\", function () {\r",
							"        pm.expect(resp_data.start_qa_salary).to.eql(+req_data.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_6_months = salary*2\", function () {\r",
							"        pm.expect(resp_data.qa_salary_after_6_months).to.eql(+req_data.salary*2);\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_12_months resp = salary*2.7 req\", function () {\r",
							"        pm.expect(resp_data.qa_salary_after_12_months).to.eql(+req_data.salary*2.7);\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_12_months resp = salary*2.7 req\", function () {\r",
							"        pm.expect(resp_data.qa_salary_after_12_months).to.eql(+req_data.salary*2.7);\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_1.5_year resp = salary*3.3 req\", function () {\r",
							"        pm.expect(resp_data[\"qa_salary_after_1.5_year\"]).to.eql(+req_data.salary*3.3);\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_3.5_years resp = salary*3.8 req\", function () {\r",
							"        pm.expect(resp_data[\"qa_salary_after_3.5_years\"]).to.eql(+req_data.salary*3.8);\r",
							"});\r",
							"\r",
							"pm.test(\"person 1 element u_name resp = salary req\", function () {\r",
							"        pm.expect(resp_data.person.u_name[1]).to.eql(+req_data.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"u_age resp = age req\", function () {\r",
							"        pm.expect(resp_data.person.u_age).to.eql(+req_data.age);\r",
							"});\r",
							"\r",
							"pm.test(\"u_salary_5_years resp = salary*4.2 req\", function () {\r",
							"        pm.expect(resp_data.u_salary_5_years).to.eql+(req_data.salary*4.2);\r",
							"});\r",
							"\r",
							"for (var key in resp_data.person) {\r",
							"    console.log(key+\": \"+ resp_data.person[key]);\r",
							"};\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}